
class Keyboard {
	
	static Array keyboard;
	static String line;
	
    /** Initializes the keyboard. */
    function void init() {
		let keyboard = 24576;
		let line = String.new(250);

		return;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */

    function char keyPressed() {
		if(keyboard[0] = 0) {
			return 0;
        } else {
            return keyboard[0];
        }
    }	

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
		var char c;

		while(~(Keyboard.keyPressed() = 0)) {
            //Do nothing, hang
		}
		
		do Output.printChar(c);
		return c;
    }

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
		var String s;
		var int i, lineLength;
		var char c, b;
		
		let i = 0;
		do Output.printString(message);
		
		while(true) {
			let c = Keyboard.readChar();
			
			//Return/Enter
			if(c = 128) {
				let lineLength = line.length();
				let s = String.new(lineLength);
				
				//Copy line to s
				while(i < lineLength) {
					let b = line.charAt(i);
					do s.appendChar(b);
					let i = i + 1;
				}
				
				while(line.length() > 0) {
					do line.eraseLastChar();
				}
				
				return s;
			} else {

				//Backspace
				if(c = 129) {
					do line.eraseLastChar();
				} else {

					let line = line.appendChar(c);
				}
			}
		}

        //Catch all return an empty string
		return "";
    }   

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
		var String s;
		let s = Keyboard.readLine(message);
		return (s.intValue());
    }
}